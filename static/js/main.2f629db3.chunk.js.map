{"version":3,"sources":["styles.js","index.js","App.js"],"names":["GlobalStyle","createGlobalStyle","Container","styled","div","Title","List","ReactDOM","render","useState","repositories","setRepositories","handleFavorites","id","newRepositories","map","repo","favorite","useEffect","a","fetch","response","json","data","getRepositories","filtered","filter","document","title","length","key","href","html_url","name","role","aria-label","onClick","getElementById"],"mappings":"k9CAEO,IAAMA,EAAcC,YAAH,KAgBXC,EAAYC,IAAOC,IAAV,KAWTC,EAAQF,IAAOC,IAAV,KAaLE,EAAOH,IAAOC,IAAV,K,yjBCrCjBG,IAASC,OACP,oCACE,mBCHW,WAAgB,IAAD,EACYC,mBAAS,IADrB,mBACrBC,EADqB,KACPC,EADO,KAqB5B,SAASC,EAAgBC,GACvB,IAAMC,EAAkBJ,EAAaK,KAAI,SAAAC,GACvC,OAAOA,EAAKH,KAAOA,EAAZ,KACEG,EADF,CACQC,UAAWD,EAAKC,WADxB,KAEED,MAEXL,EAAgBG,GAGlB,OA3BAI,qBAAU,WAAM,4CACd,8BAAAC,EAAA,sEACyBC,MACrB,qDAFJ,cACQC,EADR,gBAKqBA,EAASC,OAL9B,OAKQC,EALR,OAOEZ,EAAgBY,GAPlB,4CADc,uBAAC,WAAD,wBAUdC,KACC,IAEHN,qBAAU,WACR,IAAMO,EAAWf,EAAagB,QAAO,SAAAV,GAAI,OAAIA,EAAKC,YAClDU,SAASC,MAAT,sBAA6BH,EAASI,OAAtC,gBACC,CAACnB,IAYF,oCACE,kBAACR,EAAD,KACE,kBAACG,EAAD,+BACA,kBAACC,EAAD,KACE,4BACGI,EAAaK,KAAI,SAAAC,GAAI,OACpB,wBAAIc,IAAKd,EAAKH,IACZ,uBAAGkB,KAAMf,EAAKgB,UAAWhB,EAAKiB,MAC7BjB,EAAKC,SACJ,0BACEiB,KAAK,MACLC,aAAW,WACXC,QAAS,kBAAMxB,EAAgBI,EAAKH,MAEnC,IALH,eAMK,KAGL,0BACEqB,KAAK,MACLC,aAAW,eACXC,QAAS,kBAAMxB,EAAgBI,EAAKH,MAEnC,IALH,SAMI,eDpDlB,MAEA,kBAACb,EAAD,OAGF2B,SAASU,eAAe,W","file":"static/js/main.2f629db3.chunk.js","sourcesContent":["import styled, { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n    html, body {\r\n        box-sizing: border-box;\r\n        background-color: rgb(40, 40, 40);\r\n        height: 100%;\r\n        margin: 0px;\r\n        padding: 0px;\r\n        font-family: 'Roboto';\r\n        font-size: 1.3em;\r\n        color: white;\r\n    }\r\n    ul {\r\n      list-style: none;\r\n    }\r\n`;\r\n\r\nexport const Container = styled.div`\r\n  height: 100vh;\r\n  display: grid;\r\n  grid-template-columns: repeat(12, 1fr);\r\n  grid-template-rows: 60px 1fr:\r\n  grid-template-areas: \r\n    \"h h h h h h h h h h h h\"\r\n    \"c c c c c c c c c c c c\"\r\n    \"f f f f f f f f f f f f\";\r\n`;\r\n\r\nexport const Title = styled.div`\r\n  margin: 10px 0 20px 0;\r\n\r\n  grid-column: 1 / -1;\r\n  grid-row: 1;\r\n  display: flex;\r\n  justify-content: center;\r\n\r\n  @media only screen and (max-width: 600px) {\r\n    font-size: 0.8em;\r\n  }\r\n`;\r\n\r\nexport const List = styled.div`\r\n  grid-column: 1 / -1;\r\n  grid-row: 2;\r\n  display: flex;\r\n  justify-content: center;\r\n\r\n  li {\r\n    margin: 6px;\r\n  }\r\n\r\n  a {\r\n    text-decoration: none;\r\n    color: white;\r\n  }\r\n\r\n  @media only screen and (max-width: 600px) {\r\n    font-size: 0.6em;\r\n  }\r\n`;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { GlobalStyle } from \"./styles\";\n\nReactDOM.render(\n  <>\n    <App />\n\n    <GlobalStyle />\n  </>,\n\n  document.getElementById(\"root\")\n);\n","import React, { useState, useEffect } from \"react\";\n\nimport { Container, Title, List } from \"./styles\";\n\nexport default function App() {\n  const [repositories, setRepositories] = useState([]);\n\n  useEffect(() => {\n    async function getRepositories() {\n      const response = await fetch(\n        \"https://api.github.com/users/saulocastillos/repos\"\n      );\n\n      const data = await response.json();\n\n      setRepositories(data);\n    }\n    getRepositories();\n  }, []);\n\n  useEffect(() => {\n    const filtered = repositories.filter(repo => repo.favorite);\n    document.title = `Voc√™ tem ${filtered.length} favoritos`;\n  }, [repositories]);\n\n  function handleFavorites(id) {\n    const newRepositories = repositories.map(repo => {\n      return repo.id === id\n        ? { ...repo, favorite: !repo.favorite }\n        : { ...repo };\n    });\n    setRepositories(newRepositories);\n  }\n\n  return (\n    <>\n      <Container>\n        <Title>My GitHub Repositories</Title>\n        <List>\n          <ul>\n            {repositories.map(repo => (\n              <li key={repo.id}>\n                <a href={repo.html_url}>{repo.name}</a>\n                {repo.favorite ? (\n                  <span\n                    role=\"img\"\n                    aria-label=\"favorite\"\n                    onClick={() => handleFavorites(repo.id)}\n                  >\n                    {\" \"}\n                    üåü{\" \"}\n                  </span>\n                ) : (\n                  <span\n                    role=\"img\"\n                    aria-label=\"shining-star\"\n                    onClick={() => handleFavorites(repo.id)}\n                  >\n                    {\" \"}\n                    ‚≠ê{\" \"}\n                  </span>\n                )}\n              </li>\n            ))}\n          </ul>\n        </List>\n      </Container>\n    </>\n  );\n}\n"],"sourceRoot":""}